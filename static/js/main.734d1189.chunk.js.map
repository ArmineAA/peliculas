{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["data","id","personaje","anime","App","state","form","modalInsertar","modalEditar","handleChange","e","setState","target","name","value","mostrarModalInsertar","ocultarModalInsertar","mostrarModalEditar","registro","ocultarModalEditar","insertar","valorNuevo","length","lista","push","editar","dato","contador","map","eliminar","window","confirm","splice","color","onClick","this","elemento","isOpen","className","readOnly","type","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.734d1189.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Table, Button, Container, Modal, ModalBody, ModalHeader, FormGroup, ModalFooter } from 'reactstrap';\n\n\nconst data = [\n  { id: 1, personaje: \"Nana\", anime: \"Conde Patula\" },\n  { id: 2, personaje: \"Igor\", anime: \"Conde Dracula\" },\n  { id: 3, personaje: \"Benito\", anime: \"Don Gato\" },\n  { id: 4, personaje: \"Cucho\", anime: \"Don Gato\" },\n  { id: 5, personaje: \"Espanto\", anime: \"Don Gato\" },\n  { id: 6, personaje: \"Patoven\", anime: \"Conde Dracula\" },\n];\n\nclass App extends Component {\n  state = {\n    data: data,\n    form:{\n      id:'',\n      personaje:'',\n      anime:''\n    },\n    modalInsertar:false,\n    modalEditar:false,\n  }\n\n  handleChange=e=>{\n    this.setState({\n      form:{\n        ...this.state.form,\n        [e.target.name]:e.target.value,\n      }\n    });\n  }\n  mostrarModalInsertar=()=>{\n    this.setState({modalInsertar:true});\n  }\n  ocultarModalInsertar=()=>{\n    this.setState({modalInsertar:false});\n  }\n  mostrarModalEditar=(registro)=>{\n    this.setState({modalEditar:true, form: registro});\n  }\n  ocultarModalEditar=()=>{\n    this.setState({modalEditar:false});\n  }\n\n  insertar=()=>{\n    var valorNuevo={...this.state.form};\n    valorNuevo.id=this.state.data.length+1;\n    var lista=this.state.data;\n    lista.push(valorNuevo);\n    this.setState({data: lista,modalInsertar:false});\n\n  }\n\n  editar=(dato)=>{\n    var contador=0;\n    var lista=this.state.data;\n    lista.map((registro)=>{\n      if(registro.id===dato.id){\n        lista[contador].personaje=dato.personaje;\n        lista[contador].anime=dato.anime;\n      }\n      contador++;\n    });\n    this.setState({data:lista, modalEditar: false});\n  }\n  eliminar=(dato)=>{\n    const opcion=window.confirm(\"Se eliminara: \"+dato.id);\n    if(opcion){\n      var contador=0;\n      var lista=this.state.data;\n      lista.map((registro)=>{\n        if(registro.id===dato.id){\n          lista.splice(contador,1);\n        }\n        contador++;\n      });\n      this.setState({data:lista});\n    }\n  }\n  render() {\n    return (\n      <Container>\n        <br />\n        <Button color=\"success\" onClick={()=>this.mostrarModalInsertar()}>Insertar Nuevo Personaje</Button>\n        <br /><br />\n        <Table>\n          <thead>\n            <tr>\n              <th>Id</th>\n              <th>Personaje</th>\n              <th>Programa</th>\n              <th>Acciones</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.data.map((elemento) => (\n              <tr>\n                <td>{elemento.id}</td>\n                <td>{elemento.personaje}</td>\n                <td>{elemento.anime}</td>\n                <td><Button color=\"primary\" onClick={()=>this.mostrarModalEditar(elemento)}>Editar</Button></td>\n                <td><Button color=\"danger\" onClick={()=>this.eliminar(elemento)}>Eliminar</Button></td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        <Modal isOpen={this.state.modalInsertar}>\n          <ModalHeader>\n            <div><h3>Insertar Personaje</h3></div>\n          </ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <label>\n                Id:\n              </label>\n              <input className=\"form-control\" readOnly type=\"text\"value={this.state.data.length+1}/>\n            </FormGroup>\n            <FormGroup>\n              <label>\n                Personaje:\n              </label>\n              <input className=\"form-control\" name=\"personaje\" type=\"text\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup>\n              <label>\n                Programa:\n              </label>\n              <input className=\"form-control\" name=\"anime\" type=\"text\" onChange={this.handleChange} />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={()=>this.insertar()}>Insertar</Button>\n            <Button color=\"danger\" onClick={()=>this.ocultarModalInsertar()}>Cancelar</Button>\n          </ModalFooter>\n        </Modal>\n\n        <Modal isOpen={this.state.modalEditar}>\n          <ModalHeader>\n            <div><h3>Editar Personaje</h3></div>\n          </ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <label>\n                Id:\n              </label>\n              <input className=\"form-control\" readOnly type=\"text\" value={this.state.form.id}/>\n            </FormGroup>\n            <FormGroup>\n              <label>\n                Personaje:\n              </label>\n              <input className=\"form-control\" name=\"personaje\" type=\"text\" onChange={this.handleChange} value={this.state.form.personaje}/>\n            </FormGroup>\n            <FormGroup>\n              <label>\n                Programa:\n              </label>\n              <input className=\"form-control\" name=\"anime\" type=\"text\" onChange={this.handleChange} value={this.state.form.anime}/>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={()=>this.editar(this.state.form)}>Editar</Button>\n            <Button color=\"danger\" onClick={()=>this.ocultarModalEditar()}>Cancelar</Button>\n          </ModalFooter>\n        </Modal>\n      </Container>\n\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}